package org.huberb.nbjaranalyzer.options;

import javax.swing.DefaultListModel;
import org.openide.filesystems.FileObject;

final class NbjaranalyzerPanel extends javax.swing.JPanel {
    
    private final NbjaranalyzerOptionsPanelController controller;
    
    NbjaranalyzerPanel(NbjaranalyzerOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
        // TODO listen to changes in form fields and call controller.changed()
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        JarAnalyzerOptionPanel = new javax.swing.JPanel();
        jarAnalyzerTabbedPane = new javax.swing.JTabbedPane();
        filterPackagePanel = new javax.swing.JPanel();
        filterPackageLabel = new javax.swing.JLabel();
        filterPackageTextField = new javax.swing.JTextField();
        addFilterPackageButton = new javax.swing.JButton();
        removeFilterPackageButton = new javax.swing.JButton();
        filterPackagesScrollPane = new javax.swing.JScrollPane();
        filterPackagesList = new javax.swing.JList();
        defaultFilterPackageButton = new javax.swing.JButton();
        filterJarsPanel = new javax.swing.JPanel();
        filterJarsLabel = new javax.swing.JLabel();
        filterJarTextField = new javax.swing.JTextField();
        filterJarsScrollPane = new javax.swing.JScrollPane();
        filterJarsList = new javax.swing.JList();
        addFilterJarButton = new javax.swing.JButton();
        removeFilterJarButton = new javax.swing.JButton();
        defaultFitlerJarButton = new javax.swing.JButton();
        ReenderOptionPanel = new javax.swing.JPanel();
        xsltLabel = new javax.swing.JLabel();
        xsltForReenderingComboBox = new javax.swing.JComboBox();

        setBackground(java.awt.SystemColor.window);
        JarAnalyzerOptionPanel.setBackground(new java.awt.Color(255, 255, 255));
        JarAnalyzerOptionPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(NbjaranalyzerPanel.class, "TTL_JarAnalyzerOptionPanel"))); // NOI18N
        filterPackagePanel.setBackground(new java.awt.Color(255, 255, 255));
        filterPackageLabel.setLabelFor(filterPackageTextField);
        org.openide.awt.Mnemonics.setLocalizedText(filterPackageLabel, "&Filter Packages");

        org.openide.awt.Mnemonics.setLocalizedText(addFilterPackageButton, org.openide.util.NbBundle.getMessage(NbjaranalyzerPanel.class, "BTN_Add")); // NOI18N
        addFilterPackageButton.setToolTipText(org.openide.util.NbBundle.getMessage(NbjaranalyzerPanel.class, "TTP_Add")); // NOI18N
        addFilterPackageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleAddFilterPackageAction(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(removeFilterPackageButton, org.openide.util.NbBundle.getMessage(NbjaranalyzerPanel.class, "BTN_Remove")); // NOI18N
        removeFilterPackageButton.setToolTipText(org.openide.util.NbBundle.getMessage(NbjaranalyzerPanel.class, "TTP_Remove")); // NOI18N
        removeFilterPackageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleRemoveFilterPackageAction(evt);
            }
        });

        filterPackagesList.setModel(new DefaultListModel());
        filterPackagesScrollPane.setViewportView(filterPackagesList);

        org.openide.awt.Mnemonics.setLocalizedText(defaultFilterPackageButton, org.openide.util.NbBundle.getMessage(NbjaranalyzerPanel.class, "BTN_Restore Default Filter Packages")); // NOI18N
        defaultFilterPackageButton.setToolTipText(org.openide.util.NbBundle.getMessage(NbjaranalyzerPanel.class, "TTP_Default")); // NOI18N
        defaultFilterPackageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleDefaultFilterPackageAction(evt);
            }
        });

        org.jdesktop.layout.GroupLayout filterPackagePanelLayout = new org.jdesktop.layout.GroupLayout(filterPackagePanel);
        filterPackagePanel.setLayout(filterPackagePanelLayout);
        filterPackagePanelLayout.setHorizontalGroup(
            filterPackagePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(filterPackagePanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(filterPackagePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(filterPackagePanelLayout.createSequentialGroup()
                        .add(filterPackageLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(filterPackageTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, filterPackagePanelLayout.createSequentialGroup()
                        .add(filterPackagesScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(filterPackagePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(defaultFilterPackageButton)
                            .add(removeFilterPackageButton)
                            .add(addFilterPackageButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 71, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        filterPackagePanelLayout.linkSize(new java.awt.Component[] {defaultFilterPackageButton, removeFilterPackageButton}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        filterPackagePanelLayout.setVerticalGroup(
            filterPackagePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(filterPackagePanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(filterPackagePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(filterPackageTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(filterPackageLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(filterPackagePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(filterPackagePanelLayout.createSequentialGroup()
                        .add(addFilterPackageButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(removeFilterPackageButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(defaultFilterPackageButton))
                    .add(filterPackagesScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        jarAnalyzerTabbedPane.addTab("Filter Packages", filterPackagePanel);

        filterJarsPanel.setBackground(new java.awt.Color(255, 255, 255));
        org.openide.awt.Mnemonics.setLocalizedText(filterJarsLabel, "Filter Jars");

        filterJarsList.setModel(new DefaultListModel());
        filterJarsScrollPane.setViewportView(filterJarsList);

        org.openide.awt.Mnemonics.setLocalizedText(addFilterJarButton, "Add");
        addFilterJarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleAddFilterJarAction(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(removeFilterJarButton, "Remove");
        removeFilterJarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleRemoveFilterJarAction(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(defaultFitlerJarButton, "Default");
        defaultFitlerJarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleDefaultFilterJarAction(evt);
            }
        });

        org.jdesktop.layout.GroupLayout filterJarsPanelLayout = new org.jdesktop.layout.GroupLayout(filterJarsPanel);
        filterJarsPanel.setLayout(filterJarsPanelLayout);
        filterJarsPanelLayout.setHorizontalGroup(
            filterJarsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(filterJarsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(filterJarsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(filterJarsPanelLayout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(filterJarsLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(filterJarTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE))
                    .add(filterJarsPanelLayout.createSequentialGroup()
                        .add(filterJarsScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(filterJarsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(defaultFitlerJarButton)
                            .add(removeFilterJarButton)
                            .add(addFilterJarButton))))
                .addContainerGap())
        );

        filterJarsPanelLayout.linkSize(new java.awt.Component[] {addFilterJarButton, defaultFitlerJarButton, removeFilterJarButton}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        filterJarsPanelLayout.setVerticalGroup(
            filterJarsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(filterJarsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(filterJarsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(filterJarTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(filterJarsLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(filterJarsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(filterJarsPanelLayout.createSequentialGroup()
                        .add(addFilterJarButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(removeFilterJarButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(defaultFitlerJarButton))
                    .add(filterJarsScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        jarAnalyzerTabbedPane.addTab("Filter Jars", filterJarsPanel);

        org.jdesktop.layout.GroupLayout JarAnalyzerOptionPanelLayout = new org.jdesktop.layout.GroupLayout(JarAnalyzerOptionPanel);
        JarAnalyzerOptionPanel.setLayout(JarAnalyzerOptionPanelLayout);
        JarAnalyzerOptionPanelLayout.setHorizontalGroup(
            JarAnalyzerOptionPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, JarAnalyzerOptionPanelLayout.createSequentialGroup()
                .add(jarAnalyzerTabbedPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
                .addContainerGap())
        );
        JarAnalyzerOptionPanelLayout.setVerticalGroup(
            JarAnalyzerOptionPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jarAnalyzerTabbedPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 244, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        ReenderOptionPanel.setBackground(java.awt.Color.white);
        ReenderOptionPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(NbjaranalyzerPanel.class, "TTL_ReenderOptionPanel"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(xsltLabel, org.openide.util.NbBundle.getMessage(NbjaranalyzerPanel.class, "LBL_REENDER_XSLT")); // NOI18N

        xsltForReenderingComboBox.setModel(new XsltFileObjectComboBoxModel());

        org.jdesktop.layout.GroupLayout ReenderOptionPanelLayout = new org.jdesktop.layout.GroupLayout(ReenderOptionPanel);
        ReenderOptionPanel.setLayout(ReenderOptionPanelLayout);
        ReenderOptionPanelLayout.setHorizontalGroup(
            ReenderOptionPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(ReenderOptionPanelLayout.createSequentialGroup()
                .add(xsltLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(xsltForReenderingComboBox, 0, 387, Short.MAX_VALUE)
                .addContainerGap())
        );
        ReenderOptionPanelLayout.setVerticalGroup(
            ReenderOptionPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(ReenderOptionPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(xsltLabel)
                .add(xsltForReenderingComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(JarAnalyzerOptionPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(ReenderOptionPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(JarAnalyzerOptionPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(ReenderOptionPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private void handleDefaultFilterJarAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleDefaultFilterJarAction
// TODO add your handling code here:
        final DefaultListModel dlm = (DefaultListModel)this.filterJarsList.getModel();
        final NbjaranalyzerSettings settings = NbjaranalyzerSettings.getDefault();
        
        final String []defaultFilterJars = settings.getDefaultFilterJars();
        dlm.clear();
        for (int i = 0; i < defaultFilterJars.length; i++ ) {
            String defaultFilterPackage = defaultFilterJars[i];
            dlm.addElement( defaultFilterPackage );
        }
        
    }//GEN-LAST:event_handleDefaultFilterJarAction
    
    private void handleRemoveFilterJarAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleRemoveFilterJarAction
        
        // TODO enable/disable removeFilterPackageButton
        
        final int selectedIndex = this.filterJarsList.getSelectedIndex();
        final DefaultListModel dlm = (DefaultListModel)this.filterJarsList.getModel();
        if (selectedIndex >= 0 && selectedIndex < dlm.getSize()) {
            final String filterJar = (String)dlm.remove( selectedIndex );
            if (filterJar != null && filterJar.length() > 0) {
                this.filterJarTextField.setText( filterJar ) ;
            }
        }
        
    }//GEN-LAST:event_handleRemoveFilterJarAction
    
    private void handleAddFilterJarAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleAddFilterJarAction
        
        final DefaultListModel dlm = (DefaultListModel)this.filterJarsList.getModel();
        final String filterJar = this.filterJarTextField.getText();
        
        // Avoid duplicates
        boolean filterJarIsAlreadyDefined = false;
        for (int i = 0; !filterJarIsAlreadyDefined && i < dlm.getSize(); i++ ) {
            filterJarIsAlreadyDefined = filterJar.equals( dlm.get(i) );
        }
        if (!filterJarIsAlreadyDefined) {
            if (filterJar != null && filterJar.length() > 0) {
                dlm.addElement( filterJar );
            }
        }
        
        // clear the text field
        this.filterJarTextField.setText( "" );
        
    }//GEN-LAST:event_handleAddFilterJarAction
    
    private void handleDefaultFilterPackageAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleDefaultFilterPackageAction
        
        final DefaultListModel dlm = (DefaultListModel)this.filterPackagesList.getModel();
        final NbjaranalyzerSettings settings = NbjaranalyzerSettings.getDefault();
        
        final String []defaultFilterPackages = settings.getDefaultFilterPackages();
        dlm.clear();
        for (int i = 0; i < defaultFilterPackages.length; i++ ) {
            String defaultFilterPackage = defaultFilterPackages[i];
            dlm.addElement( defaultFilterPackage );
        }
        
    }//GEN-LAST:event_handleDefaultFilterPackageAction
    
    private void handleRemoveFilterPackageAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleRemoveFilterPackageAction
        
        // TODO enable/disable removeFilterPackageButton
        
        final int selectedIndex = this.filterPackagesList.getSelectedIndex();
        final DefaultListModel dlm = (DefaultListModel)this.filterPackagesList.getModel();
        if (selectedIndex >= 0 && selectedIndex < dlm.getSize()) {
            final String filterPackage = (String)dlm.remove( selectedIndex );
            if (filterPackage != null && filterPackage.length() > 0) {
                this.filterPackageTextField.setText( filterPackage ) ;
            }
        }
        
    }//GEN-LAST:event_handleRemoveFilterPackageAction
    
    private void handleAddFilterPackageAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleAddFilterPackageAction
        
        final DefaultListModel dlm = (DefaultListModel)this.filterPackagesList.getModel();
        final String filterPackage = this.filterPackageTextField.getText();
        
        // Avoid duplicates
        boolean filterPackageIsAlreadyDefined = false;
        for (int i = 0; !filterPackageIsAlreadyDefined && i < dlm.getSize(); i++ ) {
            filterPackageIsAlreadyDefined = filterPackage.equals( dlm.get(i) );
        }
        if (!filterPackageIsAlreadyDefined) {
            if (filterPackage != null && filterPackage.length() > 0) {
                dlm.addElement( filterPackage );
            }
        }
        
        // clear the text field
        this.filterPackageTextField.setText( "" );
        
    }//GEN-LAST:event_handleAddFilterPackageAction
    
    void load() {
        
        // Read settings and initialize GUI
        final NbjaranalyzerSettings settings = NbjaranalyzerSettings.getDefault();
        {
            final DefaultListModel dlmPackages = (DefaultListModel)this.filterPackagesList.getModel();
            dlmPackages.clear();
            final String []filterPackages = settings.getFilterPackages();
            for (int i = 0; i < filterPackages.length; i++ ) {
                final String filterPackage = filterPackages[i];
                dlmPackages.addElement( filterPackage );
            }
        }
        {
            final DefaultListModel dlmJars = (DefaultListModel)this.filterJarsList.getModel();
            dlmJars.clear();
            final String []filterJars = settings.getFilterJars();
            for (int i = 0; i < filterJars.length; i++ ) {
                final String filterJar = filterJars[i];
                dlmJars.addElement( filterJar );
            }
        }
        final XsltFileObjectComboBoxModel xsltListModel = (XsltFileObjectComboBoxModel) this.xsltForReenderingComboBox.getModel();
        xsltListModel.refresh();
        
        final FileObject fo = settings.getXsltFileObject();
        if (fo != null) {
            final LabelFileObjectBean lfob = new LabelFileObjectBean( fo );
            this.xsltForReenderingComboBox.setSelectedItem( lfob );
        }
    }
    
    void store() {
        // Store modified settings
        final NbjaranalyzerSettings settings = NbjaranalyzerSettings.getDefault();
        {
            final DefaultListModel dlmPackages = (DefaultListModel)this.filterPackagesList.getModel();
            final String[] filterPackages = new String[dlmPackages.getSize()];
            for (int i = 0; i < filterPackages.length; i++ ) {
                filterPackages[i] = (String)dlmPackages.get(i);
                
            }
            settings.setFilterPackages( filterPackages );
        }
        {
            final DefaultListModel dlmJars = (DefaultListModel)this.filterJarsList.getModel();
            final String[] filterJars = new String[dlmJars.getSize()];
            for (int i = 0; i < filterJars.length; i++ ) {
                filterJars[i] = (String)dlmJars.get(i);
                
            }
            settings.setFilterJars( filterJars );
        }
        
        final LabelFileObjectBean lfob = (LabelFileObjectBean)this.xsltForReenderingComboBox.getSelectedItem();
        settings.setXsltFileObject( lfob.getFileObject() );
    }
    
    boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JarAnalyzerOptionPanel;
    private javax.swing.JPanel ReenderOptionPanel;
    private javax.swing.JButton addFilterJarButton;
    private javax.swing.JButton addFilterPackageButton;
    private javax.swing.JButton defaultFilterPackageButton;
    private javax.swing.JButton defaultFitlerJarButton;
    private javax.swing.JTextField filterJarTextField;
    private javax.swing.JLabel filterJarsLabel;
    private javax.swing.JList filterJarsList;
    private javax.swing.JPanel filterJarsPanel;
    private javax.swing.JScrollPane filterJarsScrollPane;
    private javax.swing.JLabel filterPackageLabel;
    private javax.swing.JPanel filterPackagePanel;
    private javax.swing.JTextField filterPackageTextField;
    private javax.swing.JList filterPackagesList;
    private javax.swing.JScrollPane filterPackagesScrollPane;
    private javax.swing.JTabbedPane jarAnalyzerTabbedPane;
    private javax.swing.JButton removeFilterJarButton;
    private javax.swing.JButton removeFilterPackageButton;
    private javax.swing.JComboBox xsltForReenderingComboBox;
    private javax.swing.JLabel xsltLabel;
    // End of variables declaration//GEN-END:variables
    
}
