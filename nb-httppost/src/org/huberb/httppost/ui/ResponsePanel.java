/*
 * ResponsePanel.java
 *
 * Created on 25. September 2006, 22:55
 */

package org.huberb.httppost.ui;

import java.util.Date;
import org.huberb.httppost.model.HttpPostForm;
import org.openide.util.NbBundle;

/**
 *
 * @author  HuberB1
 */
public class ResponsePanel extends javax.swing.JPanel {
    
    private HeadersTableModel htm;
    /** Creates new form ResponsePanel */
    public ResponsePanel() {
        initComponents();
        
        this.htm = new HeadersTableModel();
        this.headersTable.setModel(this.htm);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        startEndDateLabel = new javax.swing.JLabel();
        startEndDateTextField = new javax.swing.JTextField();
        durationTextField = new javax.swing.JTextField();
        durationLabel = new javax.swing.JLabel();
        responseCodeLabel = new javax.swing.JLabel();
        responseCodeTextField = new javax.swing.JTextField();
        responseMessageLabel = new javax.swing.JLabel();
        responseMessageTextField = new javax.swing.JTextField();
        splitPane = new javax.swing.JSplitPane();
        headerPanel = new javax.swing.JPanel();
        headerLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        headersTable = new javax.swing.JTable();
        responseDataPanel = new javax.swing.JPanel();
        responseDataLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        responseDateTextArea = new javax.swing.JTextArea();

        startEndDateLabel.setText(org.openide.util.NbBundle.getMessage(ResponsePanel.class, "ResponsePanel.startEndDateLabel.text")); // NOI18N

        startEndDateTextField.setEditable(false);
        startEndDateTextField.setText(org.openide.util.NbBundle.getMessage(ResponsePanel.class, "ResponsePanel.startEndDateTextField.text")); // NOI18N

        durationTextField.setEditable(false);
        durationTextField.setText(org.openide.util.NbBundle.getMessage(ResponsePanel.class, "ResponsePanel.durationTextField.text")); // NOI18N

        durationLabel.setText(org.openide.util.NbBundle.getMessage(ResponsePanel.class, "ResponsePanel.durationLabel.text")); // NOI18N

        responseCodeLabel.setText(org.openide.util.NbBundle.getMessage(ResponsePanel.class, "ResponsePanel.responseCodeLabel.text")); // NOI18N

        responseCodeTextField.setEditable(false);
        responseCodeTextField.setText(org.openide.util.NbBundle.getMessage(ResponsePanel.class, "ResponsePanel.responseCodeTextField.text")); // NOI18N

        responseMessageLabel.setText(org.openide.util.NbBundle.getMessage(ResponsePanel.class, "ResponsePanel.responseMessageLabel.text")); // NOI18N

        responseMessageTextField.setEditable(false);
        responseMessageTextField.setText(org.openide.util.NbBundle.getMessage(ResponsePanel.class, "ResponsePanel.responseMessageTextField.text")); // NOI18N

        splitPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        splitPane.setOneTouchExpandable(true);
        headerLabel.setText(org.openide.util.NbBundle.getMessage(ResponsePanel.class, "ResponsePanel.headerLabel.text")); // NOI18N

        jScrollPane1.setViewportView(headersTable);

        org.jdesktop.layout.GroupLayout headerPanelLayout = new org.jdesktop.layout.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(headerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(headerPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE)
                    .add(headerLabel))
                .addContainerGap())
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(headerPanelLayout.createSequentialGroup()
                .add(headerLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                .addContainerGap())
        );
        splitPane.setLeftComponent(headerPanel);

        responseDataLabel.setText(org.openide.util.NbBundle.getMessage(ResponsePanel.class, "ResponsePanel.responseDataLabel.text")); // NOI18N

        jScrollPane2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        responseDateTextArea.setColumns(20);
        responseDateTextArea.setEditable(false);
        responseDateTextArea.setRows(5);
        jScrollPane2.setViewportView(responseDateTextArea);

        org.jdesktop.layout.GroupLayout responseDataPanelLayout = new org.jdesktop.layout.GroupLayout(responseDataPanel);
        responseDataPanel.setLayout(responseDataPanelLayout);
        responseDataPanelLayout.setHorizontalGroup(
            responseDataPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(responseDataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(responseDataPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE)
                    .add(responseDataLabel))
                .addContainerGap())
        );
        responseDataPanelLayout.setVerticalGroup(
            responseDataPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(responseDataPanelLayout.createSequentialGroup()
                .add(responseDataLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                .addContainerGap())
        );
        splitPane.setRightComponent(responseDataPanel);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(splitPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(responseCodeLabel)
                            .add(startEndDateLabel))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                .add(responseCodeTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(responseMessageLabel)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(responseMessageTextField))
                            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                .add(startEndDateTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 233, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(durationLabel)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(durationTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 75, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(startEndDateLabel)
                    .add(durationLabel)
                    .add(durationTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(startEndDateTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(responseCodeLabel)
                    .add(responseMessageLabel)
                    .add(responseMessageTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(responseCodeTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(splitPane)
                .add(13, 13, 13))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel durationLabel;
    private javax.swing.JTextField durationTextField;
    private javax.swing.JLabel headerLabel;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JTable headersTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel responseCodeLabel;
    private javax.swing.JTextField responseCodeTextField;
    private javax.swing.JLabel responseDataLabel;
    private javax.swing.JPanel responseDataPanel;
    private javax.swing.JTextArea responseDateTextArea;
    private javax.swing.JLabel responseMessageLabel;
    private javax.swing.JTextField responseMessageTextField;
    private javax.swing.JSplitPane splitPane;
    private javax.swing.JLabel startEndDateLabel;
    private javax.swing.JTextField startEndDateTextField;
    // End of variables declaration//GEN-END:variables
    
    public void updateHttpPostForm( HttpPostForm httpPostForm ) {
        //---
        this.responseCodeTextField.setText( String.valueOf(httpPostForm.getResponseCode()) );
        this.responseMessageTextField.setText( httpPostForm.getResponseMessage() );
        
        //---
        this.htm.updateHeaders( httpPostForm.getResponseHeaders() );
        final String responseData = httpPostForm.getResponseData();
        this.responseDateTextArea.setText( responseData );
        
        //---
        final Long startDate = httpPostForm.getStartDate();
        final Long endDate = httpPostForm.getEndDate();
        
        String startEndDateFormatted = "";
        if (startDate != null && endDate != null) {
            startEndDateFormatted =
                    NbBundle.getMessage( ResponsePanel.class, "ResponsePanel.startEndDateTextField.textFormat", new Object[] {
                new Date(startDate),
                new Date(endDate)
            });
        }
        this.startEndDateTextField.setText( startEndDateFormatted );
        
        //---
        final Long duration = httpPostForm.getDuration();
        String durationFormatted = "";
        if (duration != null) {
            durationFormatted =
                    NbBundle.getMessage( ResponsePanel.class, "ResponsePanel.durationTextField.textFormat", new Object[] {
                duration,
            });
        }
        this.durationTextField.setText( durationFormatted );
    }
    
}
