package org.huberb.charindex;
import java.io.Serializable;
import org.huberb.charindex.ui.CharIndexPanel;
import org.openide.util.ImageUtilities;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;
/**
 * Top component which displays something.
 */
final class CharIndexTopComponent extends TopComponent {

    public final static String ICON_RESOURCE = "org/huberb/charindex/images/charindex.png";
    private static final long serialVersionUID = 1L;

    private static CharIndexTopComponent instance;

    private CharIndexTopComponent() {
        initComponents();
        this.add( new CharIndexPanel() );
        
        setName(NbBundle.getMessage(CharIndexTopComponent.class, "CTL_CharIndexTopComponent"));
        setToolTipText(NbBundle.getMessage(CharIndexTopComponent.class, "HINT_CharIndexTopComponent"));
        setIcon(ImageUtilities.loadImage(ICON_RESOURCE, true));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.BorderLayout());

    }
    // </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    /**
     * Gets default instance. Don't use directly, it reserved for '.settings' file only,
     * i.e. deserialization routines, otherwise you can get non-deserialized instance.
     */
    public static synchronized CharIndexTopComponent getDefault() {
        if (instance == null) {
            instance = new CharIndexTopComponent();
        }
        return instance;
    }

    public int getPersistenceType() {
        return TopComponent.PERSISTENCE_ALWAYS;
    }

    public void componentOpened() {
        // TODO add custom code on component opening
    }

    public void componentClosed() {
        // TODO add custom code on component closing
    }

    /** replaces this in object stream */
    public Object writeReplace() {
        return new ResolvableHelper();
    }

    protected String preferredID() {
        return "CharIndexTopComponent";
    }

    final static class ResolvableHelper implements Serializable {
        private static final long serialVersionUID = 1L;
        public Object readResolve() {
            return CharIndexTopComponent.getDefault();
        }
    }

}
